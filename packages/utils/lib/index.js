"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.publicPath = exports.pkg = exports.pathItem = exports.packageName = exports.outputPath = exports.outputManifestPath = exports.library = exports.cwdPath = exports.basePath = void 0;
exports.requireWebpackConfig = requireWebpackConfig;
exports.uuid = void 0;
var _path = _interopRequireDefault(require("path"));
var _fs = _interopRequireDefault(require("fs"));
var _uuid = require("uuid");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
const pathItem = exports.pathItem = process.env.NODE_ENV === "development" ? "development" : "production";

// 获取package.json对象
const pkg = exports.pkg = require(_path.default.resolve("./package.json"));

// webpack config
function requireWebpackConfig() {
  const webpackConfigPath = "./src/webpack.config";
  if (_fs.default.existsSync(_path.default.resolve(webpackConfigPath))) {
    return interopRequireDefault(require(_path.default.resolve(webpackConfigPath)));
  }
  return {
    default: {}
  };
}

// 当前工作目录的绝对路径
const cwdPath = exports.cwdPath = process.cwd();

// 每次打包生成唯一id
const uuid = exports.uuid = (0, _uuid.v4)().split("-").join("");

// 包名称
const packageName = exports.packageName = pkg.name;

// 库名称
const library = exports.library = `${packageName}`;
const basePath = exports.basePath = `dist/${packageName}/${uuid}`;

// 资源异步加载路径(原始域名下的路径
const publicPath = exports.publicPath = `/${basePath}/`;

// 静态资源输出文件路径
const outputPath = exports.outputPath = `/${basePath}/`;

// manifest输出路径
const outputManifestPath = exports.outputManifestPath = _path.default.resolve("manifest", pathItem, "manifest.json");
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcGF0aCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2ZzIiwiX3V1aWQiLCJlIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJpbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJwYXRoSXRlbSIsImV4cG9ydHMiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJwa2ciLCJwYXRoIiwicmVzb2x2ZSIsInJlcXVpcmVXZWJwYWNrQ29uZmlnIiwid2VicGFja0NvbmZpZ1BhdGgiLCJmcyIsImV4aXN0c1N5bmMiLCJjd2RQYXRoIiwiY3dkIiwidXVpZCIsInV1aWR2NCIsInNwbGl0Iiwiam9pbiIsInBhY2thZ2VOYW1lIiwibmFtZSIsImxpYnJhcnkiLCJiYXNlUGF0aCIsInB1YmxpY1BhdGgiLCJvdXRwdXRQYXRoIiwib3V0cHV0TWFuaWZlc3RQYXRoIl0sInNvdXJjZXMiOlsiLi4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgZnMgZnJvbSBcImZzXCI7XG5pbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tIFwidXVpZFwiO1xuXG5mdW5jdGlvbiBpbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGVcbiAgICA/IG9ialxuICAgIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmosXG4gICAgICB9O1xufVxuXG5leHBvcnQgY29uc3QgcGF0aEl0ZW0gPVxuICBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiID8gXCJkZXZlbG9wbWVudFwiIDogXCJwcm9kdWN0aW9uXCI7XG5cbi8vIOiOt+WPlnBhY2thZ2UuanNvbuWvueixoVxuZXhwb3J0IGNvbnN0IHBrZyA9IHJlcXVpcmUocGF0aC5yZXNvbHZlKFwiLi9wYWNrYWdlLmpzb25cIikpO1xuXG4vLyB3ZWJwYWNrIGNvbmZpZ1xuZXhwb3J0IGZ1bmN0aW9uIHJlcXVpcmVXZWJwYWNrQ29uZmlnKCkge1xuICBjb25zdCB3ZWJwYWNrQ29uZmlnUGF0aCA9IFwiLi9zcmMvd2VicGFjay5jb25maWdcIjtcblxuICBpZiAoZnMuZXhpc3RzU3luYyhwYXRoLnJlc29sdmUod2VicGFja0NvbmZpZ1BhdGgpKSkge1xuICAgIHJldHVybiBpbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShwYXRoLnJlc29sdmUod2VicGFja0NvbmZpZ1BhdGgpKSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGRlZmF1bHQ6IHt9XG4gIH07XG59XG5cbi8vIOW9k+WJjeW3peS9nOebruW9leeahOe7neWvuei3r+W+hFxuZXhwb3J0IGNvbnN0IGN3ZFBhdGggPSBwcm9jZXNzLmN3ZCgpO1xuXG4vLyDmr4/mrKHmiZPljIXnlJ/miJDllK/kuIBpZFxuZXhwb3J0IGNvbnN0IHV1aWQgPSB1dWlkdjQoKS5zcGxpdChcIi1cIikuam9pbihcIlwiKTtcblxuLy8g5YyF5ZCN56ewXG5leHBvcnQgY29uc3QgcGFja2FnZU5hbWUgPSBwa2cubmFtZTtcblxuLy8g5bqT5ZCN56ewXG5leHBvcnQgY29uc3QgbGlicmFyeSA9IGAke3BhY2thZ2VOYW1lfWA7XG5cbmV4cG9ydCBjb25zdCBiYXNlUGF0aCA9IGBkaXN0LyR7cGFja2FnZU5hbWV9LyR7dXVpZH1gO1xuXG4vLyDotYTmupDlvILmraXliqDovb3ot6/lvoQo5Y6f5aeL5Z+f5ZCN5LiL55qE6Lev5b6EXG5leHBvcnQgY29uc3QgcHVibGljUGF0aCA9IGAvJHtiYXNlUGF0aH0vYDtcblxuLy8g6Z2Z5oCB6LWE5rqQ6L6T5Ye65paH5Lu26Lev5b6EXG5leHBvcnQgY29uc3Qgb3V0cHV0UGF0aCA9IGAvJHtiYXNlUGF0aH0vYDtcblxuLy8gbWFuaWZlc3TovpPlh7rot6/lvoRcbmV4cG9ydCBjb25zdCBvdXRwdXRNYW5pZmVzdFBhdGggPSBwYXRoLnJlc29sdmUoXG4gIFwibWFuaWZlc3RcIixcbiAgcGF0aEl0ZW0sXG4g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