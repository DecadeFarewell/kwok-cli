"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.publicPath = exports.pkg = exports.pathItem = exports.packageName = exports.outputPath = exports.outputManifestPath = exports.library = exports.cwdPath = exports.basePath = void 0;
exports.requireManifest = requireManifest;
exports.requireWebpackConfig = requireWebpackConfig;
exports.uuid = void 0;
var _path = _interopRequireDefault(require("path"));
var _fs = _interopRequireDefault(require("fs"));
var _uuid = require("uuid");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
const pathItem = exports.pathItem = process.env.NODE_ENV === "development" ? "development" : "production";

// 获取package.json对象
const pkg = exports.pkg = require(_path.default.resolve("./package.json"));

// webpack config
function requireWebpackConfig() {
  const webpackConfigPath = "./src/webpack.config.js";
  try {
    if (_fs.default.existsSync(_path.default.resolve(webpackConfigPath))) {
      return interopRequireDefault(require(_path.default.resolve(webpackConfigPath)));
    } else {
      throw new Error(`webpack.config is Not Found in ${webpackConfigPath}`);
    }
  } catch (error) {
    console.log('error: ', error);
  }
}

// 当前工作目录的绝对路径
const cwdPath = exports.cwdPath = process.cwd();

// 每次打包生成唯一id
const uuid = exports.uuid = (0, _uuid.v4)().split("-").join("");

// 包名称
const packageName = exports.packageName = pkg.name;

// 库名称
const library = exports.library = `${packageName}`;
const basePath = exports.basePath = `dist/${packageName}/${uuid}`;

// 资源异步加载路径(原始域名下的路径
const publicPath = exports.publicPath = `/${basePath}/`;

// 静态资源输出文件路径
const outputPath = exports.outputPath = _path.default.resolve(basePath);

// manifest输出路径
const outputManifestPath = exports.outputManifestPath = _path.default.resolve("manifest", pathItem, "manifest.json");

// manifest导入
function requireManifest(packagePath) {
  return require(`${packagePath}/manifest/${pathItem}/manifest.json`);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcGF0aCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2ZzIiwiX3V1aWQiLCJlIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJpbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJwYXRoSXRlbSIsImV4cG9ydHMiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJwa2ciLCJwYXRoIiwicmVzb2x2ZSIsInJlcXVpcmVXZWJwYWNrQ29uZmlnIiwid2VicGFja0NvbmZpZ1BhdGgiLCJmcyIsImV4aXN0c1N5bmMiLCJFcnJvciIsImVycm9yIiwiY29uc29sZSIsImxvZyIsImN3ZFBhdGgiLCJjd2QiLCJ1dWlkIiwidXVpZHY0Iiwic3BsaXQiLCJqb2luIiwicGFja2FnZU5hbWUiLCJuYW1lIiwibGlicmFyeSIsImJhc2VQYXRoIiwicHVibGljUGF0aCIsIm91dHB1dFBhdGgiLCJvdXRwdXRNYW5pZmVzdFBhdGgiLCJyZXF1aXJlTWFuaWZlc3QiLCJwYWNrYWdlUGF0aCJdLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tIFwicGF0aFwiO1xuaW1wb3J0IGZzIGZyb20gXCJmc1wiO1xuaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSBcInV1aWRcIjtcblxuZnVuY3Rpb24gaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlXG4gICAgPyBvYmpcbiAgICA6IHtcbiAgICAgICAgZGVmYXVsdDogb2JqLFxuICAgICAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IHBhdGhJdGVtID1cbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIiA/IFwiZGV2ZWxvcG1lbnRcIiA6IFwicHJvZHVjdGlvblwiO1xuXG4vLyDojrflj5ZwYWNrYWdlLmpzb27lr7nosaFcbmV4cG9ydCBjb25zdCBwa2cgPSByZXF1aXJlKHBhdGgucmVzb2x2ZShcIi4vcGFja2FnZS5qc29uXCIpKTtcblxuLy8gd2VicGFjayBjb25maWdcbmV4cG9ydCBmdW5jdGlvbiByZXF1aXJlV2VicGFja0NvbmZpZygpIHtcbiAgY29uc3Qgd2VicGFja0NvbmZpZ1BhdGggPSBcIi4vc3JjL3dlYnBhY2suY29uZmlnLmpzXCI7XG5cbiAgdHJ5IHtcbiAgICBpZiAoZnMuZXhpc3RzU3luYyhwYXRoLnJlc29sdmUod2VicGFja0NvbmZpZ1BhdGgpKSkge1xuICAgICAgcmV0dXJuIGludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKHBhdGgucmVzb2x2ZSh3ZWJwYWNrQ29uZmlnUGF0aCkpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGB3ZWJwYWNrLmNvbmZpZyBpcyBOb3QgRm91bmQgaW4gJHt3ZWJwYWNrQ29uZmlnUGF0aH1gKVxuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmxvZygnZXJyb3I6ICcsIGVycm9yKTtcbiAgfVxufVxuXG4vLyDlvZPliY3lt6XkvZznm67lvZXnmoTnu53lr7not6/lvoRcbmV4cG9ydCBjb25zdCBjd2RQYXRoID0gcHJvY2Vzcy5jd2QoKTtcblxuLy8g5q+P5qyh5omT5YyF55Sf5oiQ5ZSv5LiAaWRcbmV4cG9ydCBjb25zdCB1dWlkID0gdXVpZHY0KCkuc3BsaXQoXCItXCIpLmpvaW4oXCJcIik7XG5cbi8vIOWMheWQjeensFxuZXhwb3J0IGNvbnN0IHBhY2thZ2VOYW1lID0gcGtnLm5hbWU7XG5cbi8vIOW6k+WQjeensFxuZXhwb3J0IGNvbnN0IGxpYnJhcnkgPSBgJHtwYWNrYWdlTmFtZX1gO1xuXG5leHBvcnQgY29uc3QgYmFzZVBhdGggPSBgZGlzdC8ke3BhY2thZ2VOYW1lfS8ke3V1aWR9YDtcblxuLy8g6LWE5rqQ5byC5q2l5Yqg6L296Lev5b6EKOWOn+Wni+Wfn+WQjeS4i+eahOi3r+W+hFxuZXhwb3J0IGNvbnN0IHB1YmxpY1BhdGggPSBgLyR7YmFzZVBhdGh9L2A7XG5cbi8vIOmdmeaAgei1hOa6kOi+k+WHuuaWh+S7tui3r+W+hFxuZXhwb3J0IGNvbnN0IG91dHB1dFBhdGggPSBwYXRoLnJlc29sdmUoYmFzZVBhdGgpO1xuXG4vLyBtYW5pZmVzdOi+k+WHuui3r+W+hFxuZXhwb3J0IGNvbnN0IG91dHB1dE1hbmlmZXN0UGF0aCA9IHBhdGgucmVzb2x2ZShcbiAgXCJtYW5pZmVzdFwiLFxuICBwYXRoSXRlbSxcbiAgXCJtYW5pZmVzdC5qc29uXCJcbik7XG5cbi8vIG1hbmlmZXN05a+85YWlXG5leHBvcnQgZnVuY3Rpb24gcmVxdWlyZU1hbmlmZXN0KHBhY2thZ2VQYXRoKSB7XG4gIHJldHVybiByZXF1aXJlKGAke3BhY2thZ2VQYXRofS9tYW5pZmVzdC8ke3BhdGhJdGVtfS9tYW5pZmVzdC5qc29uYCk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLElBQUFBLEtBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLEdBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFFLEtBQUEsR0FBQUYsT0FBQTtBQUFvQyxTQUFBRCx1QkFBQUksQ0FBQSxXQUFBQSxDQUFBLElBQUFBLENBQUEsQ0FBQUMsVUFBQSxHQUFBRCxDQUFBLEtBQUFFLE9BQUEsRUFBQUYsQ0FBQTtBQUVwQyxTQUFTRyxxQkFBcUJBLENBQUNDLEdBQUcsRUFBRTtFQUNsQyxPQUFPQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0gsVUFBVSxHQUN4QkcsR0FBRyxHQUNIO0lBQ0VGLE9BQU8sRUFBRUU7RUFDWCxDQUFDO0FBQ1A7QUFFTyxNQUFNQyxRQUFRLEdBQUFDLE9BQUEsQ0FBQUQsUUFBQSxHQUNuQkUsT0FBTyxDQUFDQyxHQUFHLENBQUNDLFFBQVEsS0FBSyxhQUFhLEdBQUcsYUFBYSxHQUFHLFlBQVk7O0FBRXZFO0FBQ08sTUFBTUMsR0FBRyxHQUFBSixPQUFBLENBQUFJLEdBQUEsR0FBR2IsT0FBTyxDQUFDYyxhQUFJLENBQUNDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDOztBQUUxRDtBQUNPLFNBQVNDLG9CQUFvQkEsQ0FBQSxFQUFHO0VBQ3JDLE1BQU1DLGlCQUFpQixHQUFHLHlCQUF5QjtFQUVuRCxJQUFJO0lBQ0YsSUFBSUMsV0FBRSxDQUFDQyxVQUFVLENBQUNMLGFBQUksQ0FBQ0MsT0FBTyxDQUFDRSxpQkFBaUIsQ0FBQyxDQUFDLEVBQUU7TUFDbEQsT0FBT1gscUJBQXFCLENBQUNOLE9BQU8sQ0FBQ2MsYUFBSSxDQUFDQyxPQUFPLENBQUNFLGlCQUFpQixDQUFDLENBQUMsQ0FBQztJQUN4RSxDQUFDLE1BQU07TUFDTCxNQUFNLElBQUlHLEtBQUssQ0FBQyxrQ0FBa0NILGlCQUFpQixFQUFFLENBQUM7SUFDeEU7RUFDRixDQUFDLENBQUMsT0FBT0ksS0FBSyxFQUFFO0lBQ2RDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFNBQVMsRUFBRUYsS0FBSyxDQUFDO0VBQy9CO0FBQ0Y7O0FBRUE7QUFDTyxNQUFNRyxPQUFPLEdBQUFmLE9BQUEsQ0FBQWUsT0FBQSxHQUFHZCxPQUFPLENBQUNlLEdBQUcsQ0FBQyxDQUFDOztBQUVwQztBQUNPLE1BQU1DLElBQUksR0FBQWpCLE9BQUEsQ0FBQWlCLElBQUEsR0FBRyxJQUFBQyxRQUFNLEVBQUMsQ0FBQyxDQUFDQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQyxFQUFFLENBQUM7O0FBRWhEO0FBQ08sTUFBTUMsV0FBVyxHQUFBckIsT0FBQSxDQUFBcUIsV0FBQSxHQUFHakIsR0FBRyxDQUFDa0IsSUFBSTs7QUFFbkM7QUFDTyxNQUFNQyxPQUFPLEdBQUF2QixPQUFBLENBQUF1QixPQUFBLEdBQUcsR0FBR0YsV0FBVyxFQUFFO0FBRWhDLE1BQU1HLFFBQVEsR0FBQXhCLE9BQUEsQ0FBQXdCLFFBQUEsR0FBRyxRQUFRSCxXQUFXLElBQUlKLElBQUksRUFBRTs7QUFFckQ7QUFDTyxNQUFNUSxVQUFVLEdBQUF6QixPQUFBLENBQUF5QixVQUFBLEdBQUcsSUFBSUQsUUFBUSxHQUFHOztBQUV6QztBQUNPLE1BQU1FLFVBQVUsR0FBQTFCLE9BQUEsQ0FBQTBCLFVBQUEsR0FBR3JCLGFBQUksQ0FBQ0MsT0FBTyxDQUFDa0IsUUFBUSxDQUFDOztBQUVoRDtBQUNPLE1BQU1HLGtCQUFrQixHQUFBM0IsT0FBQSxDQUFBMkIsa0JBQUEsR0FBR3RCLGFBQUksQ0FBQ0MsT0FBTyxDQUM1QyxVQUFVLEVBQ1ZQLFFBQVEsRUFDUixlQUNGLENBQUM7O0FBRUQ7QUFDTyxTQUFTNkIsZUFBZUEsQ0FBQ0MsV0FBVyxFQUFFO0VBQzNDLE9BQU90QyxPQUFPLENBQUMsR0FBR3NDLFdBQVcsYUFBYTlCLFFBQVEsZ0JBQWdCLENBQUM7QUFDckUiLCJpZ25vcmVMaXN0IjpbXX0=