"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.devCompiler = devCompiler;
var _webpack = _interopRequireDefault(require("webpack"));
var _webpackMerge = _interopRequireDefault(require("webpack-merge"));
var _webpack2 = _interopRequireDefault(require("./webpack.base"));
var _webpackScript = _interopRequireDefault(require("./webpack.script.dev"));
var _webpack3 = _interopRequireDefault(require("./webpack.output"));
var _webpack4 = _interopRequireDefault(require("./webpack.optimization"));
var _webpack5 = _interopRequireDefault(require("./webpack.style"));
var _webpack6 = _interopRequireDefault(require("./webpack.cache"));
var _webpack7 = _interopRequireDefault(require("./webpack.other"));
var _webpack8 = _interopRequireDefault(require("./webpack.fallback"));
var _webpack9 = _interopRequireDefault(require("./webpack.polyfill"));
var _utils = require("@kwok/utils");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
// for production

function getFrameWorkConfig() {
  let config = {};

  // try {
  //   const { webpackConfig } = require("@kwok/vue2.7");

  //   config = webpackConfig();
  // } catch (error) {}

  try {
    const {
      webpackConfig
    } = require("@kwok/vue3");
    config = webpackConfig();
  } catch (error) {}
  if (Object.keys(config).length === 0) {
    console.log('Cannot find module "@kwok/vue3" in package.json');
  }
  return config;
}
function devCompiler() {
  const config = (0, _webpackMerge.default)(_webpack2.default, _webpackScript.default, getFrameWorkConfig(), (0, _webpack5.default)(), _webpack6.default, _webpack3.default, _webpack9.default, _webpack7.default, _webpack8.default, (0, _utils.requireWebpackConfig)().default);
  return (0, _webpack.default)(config);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfd2VicGFjayIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3dlYnBhY2tNZXJnZSIsIl93ZWJwYWNrMiIsIl93ZWJwYWNrU2NyaXB0IiwiX3dlYnBhY2szIiwiX3dlYnBhY2s0IiwiX3dlYnBhY2s1IiwiX3dlYnBhY2s2IiwiX3dlYnBhY2s3IiwiX3dlYnBhY2s4IiwiX3dlYnBhY2s5IiwiX3V0aWxzIiwiZSIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZ2V0RnJhbWVXb3JrQ29uZmlnIiwiY29uZmlnIiwid2VicGFja0NvbmZpZyIsImVycm9yIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsImNvbnNvbGUiLCJsb2ciLCJkZXZDb21waWxlciIsIndlYnBhY2tNZXJnZSIsImJhc2UiLCJzY3JpcHREZXYiLCJzdHlsZSIsImNhY2hlIiwib3V0cHV0IiwicG9seWZpbGwiLCJvdGhlciIsImZhbGxiYWNrIiwicmVxdWlyZVdlYnBhY2tDb25maWciLCJ3ZWJwYWNrIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL3dlYnBhY2svaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHdlYnBhY2sgZnJvbSBcIndlYnBhY2tcIjtcbmltcG9ydCB3ZWJwYWNrTWVyZ2UgZnJvbSBcIndlYnBhY2stbWVyZ2VcIjtcbmltcG9ydCBiYXNlIGZyb20gXCIuL3dlYnBhY2suYmFzZVwiO1xuaW1wb3J0IHNjcmlwdERldiBmcm9tICcuL3dlYnBhY2suc2NyaXB0LmRldidcbmltcG9ydCBvdXRwdXQgZnJvbSBcIi4vd2VicGFjay5vdXRwdXRcIjtcbmltcG9ydCBvcHRpbWl6YXRpb24gZnJvbSBcIi4vd2VicGFjay5vcHRpbWl6YXRpb25cIjsgLy8gZm9yIHByb2R1Y3Rpb25cbmltcG9ydCBzdHlsZSBmcm9tIFwiLi93ZWJwYWNrLnN0eWxlXCI7XG5pbXBvcnQgY2FjaGUgZnJvbSBcIi4vd2VicGFjay5jYWNoZVwiO1xuaW1wb3J0IG90aGVyIGZyb20gXCIuL3dlYnBhY2sub3RoZXJcIlxuaW1wb3J0IGZhbGxiYWNrIGZyb20gXCIuL3dlYnBhY2suZmFsbGJhY2tcIjtcbmltcG9ydCBwb2x5ZmlsbCBmcm9tIFwiLi93ZWJwYWNrLnBvbHlmaWxsXCI7XG5pbXBvcnQgeyByZXF1aXJlV2VicGFja0NvbmZpZyB9IGZyb20gXCJAa3dvay91dGlsc1wiO1xuXG5mdW5jdGlvbiBnZXRGcmFtZVdvcmtDb25maWcoKSB7XG4gIGxldCBjb25maWcgPSB7fTtcblxuICAvLyB0cnkge1xuICAvLyAgIGNvbnN0IHsgd2VicGFja0NvbmZpZyB9ID0gcmVxdWlyZShcIkBrd29rL3Z1ZTIuN1wiKTtcblxuICAvLyAgIGNvbmZpZyA9IHdlYnBhY2tDb25maWcoKTtcbiAgLy8gfSBjYXRjaCAoZXJyb3IpIHt9XG5cbiAgdHJ5IHtcbiAgICBjb25zdCB7IHdlYnBhY2tDb25maWcgfSA9IHJlcXVpcmUoXCJAa3dvay92dWUzXCIpO1xuXG4gICAgY29uZmlnID0gd2VicGFja0NvbmZpZygpO1xuICB9IGNhdGNoIChlcnJvcikge31cblxuICBpZihPYmplY3Qua2V5cyhjb25maWcpLmxlbmd0aCA9PT0gMCkgeyBcbiAgICBjb25zb2xlLmxvZygnQ2Fubm90IGZpbmQgbW9kdWxlIFwiQGt3b2svdnVlM1wiIGluIHBhY2thZ2UuanNvbicpXG4gIH1cblxuICByZXR1cm4gY29uZmlnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGV2Q29tcGlsZXIoKSB7XG4gIGNvbnN0IGNvbmZpZyA9IHdlYnBhY2tNZXJnZShcbiAgICBiYXNlLFxuICAgIHNjcmlwdERldixcbiAgICBnZXRGcmFtZVdvcmtDb25maWcoKSxcbiAgICBzdHlsZSgpLFxuICAgIGNhY2hlLFxuICAgIG91dHB1dCxcbiAgICBwb2x5ZmlsbCxcbiAgICBvdGhlcixcbiAgICBmYWxsYmFjayxcbiAgICByZXF1aXJlV2VicGFja0NvbmZpZygpLmRlZmF1bHRcbiAgKTtcblxuICByZXR1cm4gd2VicGFjayhjb25maWcpO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxRQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxhQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxTQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRyxjQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBSSxTQUFBLEdBQUFMLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBSyxTQUFBLEdBQUFOLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBTSxTQUFBLEdBQUFQLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBTyxTQUFBLEdBQUFSLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBUSxTQUFBLEdBQUFULHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBUyxTQUFBLEdBQUFWLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBVSxTQUFBLEdBQUFYLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBVyxNQUFBLEdBQUFYLE9BQUE7QUFBbUQsU0FBQUQsdUJBQUFhLENBQUEsV0FBQUEsQ0FBQSxJQUFBQSxDQUFBLENBQUFDLFVBQUEsR0FBQUQsQ0FBQSxLQUFBRSxPQUFBLEVBQUFGLENBQUE7QUFOQTs7QUFRbkQsU0FBU0csa0JBQWtCQSxDQUFBLEVBQUc7RUFDNUIsSUFBSUMsTUFBTSxHQUFHLENBQUMsQ0FBQzs7RUFFZjtFQUNBOztFQUVBO0VBQ0E7O0VBRUEsSUFBSTtJQUNGLE1BQU07TUFBRUM7SUFBYyxDQUFDLEdBQUdqQixPQUFPLENBQUMsWUFBWSxDQUFDO0lBRS9DZ0IsTUFBTSxHQUFHQyxhQUFhLENBQUMsQ0FBQztFQUMxQixDQUFDLENBQUMsT0FBT0MsS0FBSyxFQUFFLENBQUM7RUFFakIsSUFBR0MsTUFBTSxDQUFDQyxJQUFJLENBQUNKLE1BQU0sQ0FBQyxDQUFDSyxNQUFNLEtBQUssQ0FBQyxFQUFFO0lBQ25DQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxpREFBaUQsQ0FBQztFQUNoRTtFQUVBLE9BQU9QLE1BQU07QUFDZjtBQUVPLFNBQVNRLFdBQVdBLENBQUEsRUFBRztFQUM1QixNQUFNUixNQUFNLEdBQUcsSUFBQVMscUJBQVksRUFDekJDLGlCQUFJLEVBQ0pDLHNCQUFTLEVBQ1RaLGtCQUFrQixDQUFDLENBQUMsRUFDcEIsSUFBQWEsaUJBQUssRUFBQyxDQUFDLEVBQ1BDLGlCQUFLLEVBQ0xDLGlCQUFNLEVBQ05DLGlCQUFRLEVBQ1JDLGlCQUFLLEVBQ0xDLGlCQUFRLEVBQ1IsSUFBQUMsMkJBQW9CLEVBQUMsQ0FBQyxDQUFDcEIsT0FDekIsQ0FBQztFQUVELE9BQU8sSUFBQXFCLGdCQUFPLEVBQUNuQixNQUFNLENBQUM7QUFDeEIiLCJpZ25vcmVMaXN0IjpbXX0=