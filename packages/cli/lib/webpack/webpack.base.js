"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _path = _interopRequireDefault(require("path"));
var _webpack = _interopRequireDefault(require("webpack"));
var _cliProgress = _interopRequireDefault(require("cli-progress"));
var _utils = require("@kwok/utils");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const cliProgressBar = new _cliProgress.default.Bar({
  // clearOnComplete: true,
  stopOnComplete: true,
  linewrap: true,
  hideCursor: true
}, {
  format: "@kwok webpack progress [{bar}] {percentage}% | ETA: {eta}s | {text}",
  barCompleteChar: "=",
  barIncompleteChar: "-"
});
function handler(percentage, ...args) {
  if (!cliProgressBar.isActive) {
    cliProgressBar.start(1, 0);
  }
  cliProgressBar.update(percentage, {
    text: args.join(" ")
  });
}
var _default = exports.default = {
  mode: process.env.NODE_ENV === "development" ? "development" : "production",
  context: _utils.cwdPath,
  context: process.cwd(),
  entry: './src/client/index.js',
  output: {
    filename: 'bundle.js',
    path: _utils.outputPath,
    clean: true // 每次构建前清空 output.path 指定的文件夹内容
  },
  module: {
    rules: [{
      test: /\.js$/,
      exclude: /node_modules/,
      use: {
        loader: 'babel-loader'
      }
    }]
  },
  plugins: [
  // 进度
  new _webpack.default.ProgressPlugin(handler)]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcGF0aCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3dlYnBhY2siLCJfY2xpUHJvZ3Jlc3MiLCJfdXRpbHMiLCJlIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjbGlQcm9ncmVzc0JhciIsImNsaVByb2dyZXNzIiwiQmFyIiwic3RvcE9uQ29tcGxldGUiLCJsaW5ld3JhcCIsImhpZGVDdXJzb3IiLCJmb3JtYXQiLCJiYXJDb21wbGV0ZUNoYXIiLCJiYXJJbmNvbXBsZXRlQ2hhciIsImhhbmRsZXIiLCJwZXJjZW50YWdlIiwiYXJncyIsImlzQWN0aXZlIiwic3RhcnQiLCJ1cGRhdGUiLCJ0ZXh0Iiwiam9pbiIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsIm1vZGUiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJjb250ZXh0IiwiY3dkUGF0aCIsImN3ZCIsImVudHJ5Iiwib3V0cHV0IiwiZmlsZW5hbWUiLCJwYXRoIiwib3V0cHV0UGF0aCIsImNsZWFuIiwibW9kdWxlIiwicnVsZXMiLCJ0ZXN0IiwiZXhjbHVkZSIsInVzZSIsImxvYWRlciIsInBsdWdpbnMiLCJ3ZWJwYWNrIiwiUHJvZ3Jlc3NQbHVnaW4iXSwic291cmNlcyI6WyIuLi8uLi9zcmMvd2VicGFjay93ZWJwYWNrLmJhc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcbmltcG9ydCB3ZWJwYWNrIGZyb20gXCJ3ZWJwYWNrXCI7XG5pbXBvcnQgY2xpUHJvZ3Jlc3MgZnJvbSAnY2xpLXByb2dyZXNzJztcbmltcG9ydCB7IGN3ZFBhdGgsIG91dHB1dFBhdGggfSBmcm9tIFwiQGt3b2svdXRpbHNcIjtcblxuY29uc3QgY2xpUHJvZ3Jlc3NCYXIgPSBuZXcgY2xpUHJvZ3Jlc3MuQmFyKFxuICB7XG4gICAgLy8gY2xlYXJPbkNvbXBsZXRlOiB0cnVlLFxuICAgIHN0b3BPbkNvbXBsZXRlOiB0cnVlLFxuICAgIGxpbmV3cmFwOiB0cnVlLFxuICAgIGhpZGVDdXJzb3I6IHRydWUsXG4gIH0sXG4gIHtcbiAgICBmb3JtYXQ6XG4gICAgICBcIkBrd29rIHdlYnBhY2sgcHJvZ3Jlc3MgW3tiYXJ9XSB7cGVyY2VudGFnZX0lIHwgRVRBOiB7ZXRhfXMgfCB7dGV4dH1cIixcbiAgICBiYXJDb21wbGV0ZUNoYXI6IFwiPVwiLFxuICAgIGJhckluY29tcGxldGVDaGFyOiBcIi1cIixcbiAgfVxuKTtcbmZ1bmN0aW9uIGhhbmRsZXIocGVyY2VudGFnZSwgLi4uYXJncykge1xuICBpZiAoIWNsaVByb2dyZXNzQmFyLmlzQWN0aXZlKSB7XG4gICAgY2xpUHJvZ3Jlc3NCYXIuc3RhcnQoMSwgMCk7XG4gIH1cbiAgY2xpUHJvZ3Jlc3NCYXIudXBkYXRlKHBlcmNlbnRhZ2UsIHsgdGV4dDogYXJncy5qb2luKFwiIFwiKSB9KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBtb2RlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiID8gXCJkZXZlbG9wbWVudFwiIDogXCJwcm9kdWN0aW9uXCIsXG4gIGNvbnRleHQ6IGN3ZFBhdGgsXG4gIGNvbnRleHQ6IHByb2Nlc3MuY3dkKCksXG4gIGVudHJ5OiAnLi9zcmMvY2xpZW50L2luZGV4LmpzJyxcbiAgb3V0cHV0OiB7XG4gICAgZmlsZW5hbWU6ICdidW5kbGUuanMnLFxuICAgIHBhdGg6IG91dHB1dFBhdGgsXG4gICAgY2xlYW46IHRydWUsIC8vIOavj+asoeaehOW7uuWJjea4heepuiBvdXRwdXQucGF0aCDmjIflrprnmoTmlofku7blpLnlhoXlrrlcbiAgfSxcbiAgbW9kdWxlOiB7XG4gICAgcnVsZXM6IFtcbiAgICAgIHtcbiAgICAgICAgdGVzdDogL1xcLmpzJC8sXG4gICAgICAgIGV4Y2x1ZGU6IC9ub2RlX21vZHVsZXMvLFxuICAgICAgICB1c2U6IHtcbiAgICAgICAgICBsb2FkZXI6ICdiYWJlbC1sb2FkZXInLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICBdLFxuICB9LFxuICBwbHVnaW5zOiBbXG4gICAgLy8g6L+b5bqmXG4gICAgbmV3IHdlYnBhY2suUHJvZ3Jlc3NQbHVnaW4oaGFuZGxlciksXG4gIF0sXG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxLQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxRQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxZQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRyxNQUFBLEdBQUFILE9BQUE7QUFBa0QsU0FBQUQsdUJBQUFLLENBQUEsV0FBQUEsQ0FBQSxJQUFBQSxDQUFBLENBQUFDLFVBQUEsR0FBQUQsQ0FBQSxLQUFBRSxPQUFBLEVBQUFGLENBQUE7QUFFbEQsTUFBTUcsY0FBYyxHQUFHLElBQUlDLG9CQUFXLENBQUNDLEdBQUcsQ0FDeEM7RUFDRTtFQUNBQyxjQUFjLEVBQUUsSUFBSTtFQUNwQkMsUUFBUSxFQUFFLElBQUk7RUFDZEMsVUFBVSxFQUFFO0FBQ2QsQ0FBQyxFQUNEO0VBQ0VDLE1BQU0sRUFDSixxRUFBcUU7RUFDdkVDLGVBQWUsRUFBRSxHQUFHO0VBQ3BCQyxpQkFBaUIsRUFBRTtBQUNyQixDQUNGLENBQUM7QUFDRCxTQUFTQyxPQUFPQSxDQUFDQyxVQUFVLEVBQUUsR0FBR0MsSUFBSSxFQUFFO0VBQ3BDLElBQUksQ0FBQ1gsY0FBYyxDQUFDWSxRQUFRLEVBQUU7SUFDNUJaLGNBQWMsQ0FBQ2EsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDNUI7RUFDQWIsY0FBYyxDQUFDYyxNQUFNLENBQUNKLFVBQVUsRUFBRTtJQUFFSyxJQUFJLEVBQUVKLElBQUksQ0FBQ0ssSUFBSSxDQUFDLEdBQUc7RUFBRSxDQUFDLENBQUM7QUFDN0Q7QUFBQyxJQUFBQyxRQUFBLEdBQUFDLE9BQUEsQ0FBQW5CLE9BQUEsR0FFYztFQUNib0IsSUFBSSxFQUFFQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsUUFBUSxLQUFLLGFBQWEsR0FBRyxhQUFhLEdBQUcsWUFBWTtFQUMzRUMsT0FBTyxFQUFFQyxjQUFPO0VBQ2hCRCxPQUFPLEVBQUVILE9BQU8sQ0FBQ0ssR0FBRyxDQUFDLENBQUM7RUFDdEJDLEtBQUssRUFBRSx1QkFBdUI7RUFDOUJDLE1BQU0sRUFBRTtJQUNOQyxRQUFRLEVBQUUsV0FBVztJQUNyQkMsSUFBSSxFQUFFQyxpQkFBVTtJQUNoQkMsS0FBSyxFQUFFLElBQUksQ0FBRTtFQUNmLENBQUM7RUFDREMsTUFBTSxFQUFFO0lBQ05DLEtBQUssRUFBRSxDQUNMO01BQ0VDLElBQUksRUFBRSxPQUFPO01BQ2JDLE9BQU8sRUFBRSxjQUFjO01BQ3ZCQyxHQUFHLEVBQUU7UUFDSEMsTUFBTSxFQUFFO01BQ1Y7SUFDRixDQUFDO0VBRUwsQ0FBQztFQUNEQyxPQUFPLEVBQUU7RUFDUDtFQUNBLElBQUlDLGdCQUFPLENBQUNDLGNBQWMsQ0FBQy9CLE9BQU8sQ0FBQztBQUV2QyxDQUFDIiwiaWdub3JlTGlzdCI6W119